package com.example.duedatemanager;

import java.util.Calendar;

import android.support.v7.app.ActionBarActivity;
import android.app.DatePickerDialog;
import android.content.ContentValues;
import android.content.Context;
import android.content.Intent;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.DatePicker;
import android.widget.EditText;

public class MoreInfoActivity extends ActionBarActivity {
String ItemId;
EditText itemName;
EditText itemDesc;
EditText itemDate;
private Calendar cal;
private int day;
private int month;
private int year;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_more_info);
		Intent intent = getIntent();
		ItemId = intent.getStringExtra("ItemId");
		itemName= (EditText)findViewById(R.id.editItemName);
   	 	itemDesc= (EditText)findViewById(R.id.editDesc);
   	 	itemDate= (EditText)findViewById(R.id.editDueDate);
   	 	fillData(this);
   	/* cal = Calendar.getInstance();
     day = cal.get(Calendar.DAY_OF_MONTH);
     month = cal.get(Calendar.MONTH);
     year = cal.get(Calendar.YEAR);
*/     itemDate.setOnClickListener(new OnClickListener() {
	        @Override
	        public void onClick(View v) {
	            DateDialog(v); 
	        }
	    });
		
		
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.more_info, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}
	
	public void fillData(Context cont){
		DueDateDbHelper mDbHelper =new DueDateDbHelper(cont);
		SQLiteDatabase db = mDbHelper.getReadableDatabase();

		// Define a projection that specifies which columns from the database
		// you will actually use after this query.
		String[] projection = {
			DueDateDBContract.DueItems._ID,
			DueDateDBContract.DueItems.COLUMN_NAME_ITEM,
			DueDateDBContract.DueItems.COLUMN_NAME_DESC,
			DueDateDBContract.DueItems.COLUMN_NAME_DATE
		    };
		
		String selection= DueDateDBContract.DueItems._ID +" = ?";
		String selectionArg[]={ItemId};
		
		Cursor c = db.query(
				DueDateDBContract.DueItems.TABLE_NAME,  // The table to query
			    projection,                               // The columns to return
			    selection,                                // The columns for the WHERE clause
			    selectionArg,                            // The values for the WHERE clause
			    null,                                     // don't group the rows
			    null,                                     // don't filter by row groups
			    null                                 // The sort order
			    );
		
		 c.moveToFirst();
		 itemName.setText(c.getString(1));
		 itemDesc.setText(c.getString(2));
		 
		 String sDate=c.getString(3);
		 String sDateArr[]=sDate.split("-");//YYYY-MM-DD
		 if(sDateArr!=null&& sDateArr.length==3){
		 itemDate.setText(sDateArr[2]+"-"+sDateArr[1]+"-"+sDateArr[0]);
		 day = Integer.parseInt(sDateArr[2]);
	     month =Integer.parseInt(sDateArr[1])-1;
	     year =Integer.parseInt(sDateArr[0]);
		 }
		 else{
		 itemDate.setText(sDate);
		 cal = Calendar.getInstance();
	     day = cal.get(Calendar.DAY_OF_MONTH);
	     month = cal.get(Calendar.MONTH);
	     year = cal.get(Calendar.YEAR);
		 }
	}
	 public void saveItem(View view){
		 String[] sDateArr=itemDate.getText().toString().split("-");
		  String sItemdate="";
		  if(sDateArr!=null && sDateArr.length==3 ){
			  sItemdate=sDateArr[2]+"-"+sDateArr[1]+"-"+sDateArr[0];
		  }
		  
		 DueDateDbHelper mDbHelper =new DueDateDbHelper(view.getContext());
		 SQLiteDatabase db = mDbHelper.getReadableDatabase();

		// New value for one column
		 ContentValues values = new ContentValues();
		 values.put(DueDateDBContract.DueItems.COLUMN_NAME_ITEM, itemName.getText().toString());
	     values.put(DueDateDBContract.DueItems.COLUMN_NAME_DESC, itemDesc.getText().toString());
	     values.put(DueDateDBContract.DueItems.COLUMN_NAME_DATE, sItemdate);
		 // Which row to update, based on the ID
	    String selection= DueDateDBContract.DueItems._ID +" = ?";
		String selectionArg[]={ItemId};

		 int count = db.update(
		     DueDateDBContract.DueItems.TABLE_NAME,
		     values,
		     selection,
		     selectionArg);
	 }
	 public void deleteItem(View view){
		 DueDateDbHelper mDbHelper =new DueDateDbHelper(view.getContext());
		 SQLiteDatabase db = mDbHelper.getReadableDatabase();
		 String selection= DueDateDBContract.DueItems._ID +" = ?";
		 String selectionArg[]={ItemId};
			// Issue SQL statement.
		db.delete(DueDateDBContract.DueItems.TABLE_NAME, selection, selectionArg);
		Intent intent = new Intent(this, ViewItemsActivity.class);
    	startActivity(intent);
	 }
	 public void DateDialog(final View dateView){

		  DatePickerDialog.OnDateSetListener listener=new DatePickerDialog.OnDateSetListener() {

		    				@Override
				public void onDateSet(DatePicker view, int year,
						int monthOfYear, int dayOfMonth) {
					// TODO Auto-generated method stub
		    					monthOfYear++;
		    		String mth=(monthOfYear<10)? ("0"+monthOfYear):(""+monthOfYear);
		    		 String dy=(dayOfMonth<10)? ("0"+dayOfMonth):(""+dayOfMonth);
		    		 ((EditText)dateView).setText(dy+"-"+mth+"-"+year);
				}};

		    DatePickerDialog dpDialog=new DatePickerDialog(this, listener, year, month, day);
		    dpDialog.show();

		}
}
