package com.example.duedatemanager;

import android.support.v7.app.ActionBarActivity;
import android.content.ContentValues;
import android.content.Context;
import android.content.Intent;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.EditText;

public class MoreInfoActivity extends ActionBarActivity {
String ItemId;
EditText itemName;
EditText itemDesc;
EditText itemDate;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_more_info);
		Intent intent = getIntent();
		ItemId = intent.getStringExtra("ItemId");
		itemName= (EditText)findViewById(R.id.editItemName);
   	 	itemDesc= (EditText)findViewById(R.id.editDesc);
   	 	itemDate= (EditText)findViewById(R.id.editDueDate);
		fillData(this);
		
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.more_info, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}
	
	public void fillData(Context cont){
		DueDateDbHelper mDbHelper =new DueDateDbHelper(cont);
		SQLiteDatabase db = mDbHelper.getReadableDatabase();

		// Define a projection that specifies which columns from the database
		// you will actually use after this query.
		String[] projection = {
			DueDateDBContract.DueItems._ID,
			DueDateDBContract.DueItems.COLUMN_NAME_ITEM,
			DueDateDBContract.DueItems.COLUMN_NAME_DESC,
			DueDateDBContract.DueItems.COLUMN_NAME_DATE
		    };
		
		String selection= DueDateDBContract.DueItems._ID +" = ?";
		String selectionArg[]={ItemId};
		
		Cursor c = db.query(
				DueDateDBContract.DueItems.TABLE_NAME,  // The table to query
			    projection,                               // The columns to return
			    selection,                                // The columns for the WHERE clause
			    selectionArg,                            // The values for the WHERE clause
			    null,                                     // don't group the rows
			    null,                                     // don't filter by row groups
			    null                                 // The sort order
			    );
		
		 c.moveToFirst();
		 itemName.setText(c.getString(1));
		 itemDesc.setText(c.getString(2));
		 itemDate.setText(c.getString(3));
	}
	 public void saveItem(View view){
		 String[] sDateArr=itemDate.getText().toString().split("-");
		  String sItemdate="";
		  if(sDateArr!=null && sDateArr.length==3 ){
			  sItemdate=sDateArr[2]+"-"+sDateArr[1]+"-"+sDateArr[0];
		  }
		  
		 DueDateDbHelper mDbHelper =new DueDateDbHelper(view.getContext());
		 SQLiteDatabase db = mDbHelper.getReadableDatabase();

		// New value for one column
		 ContentValues values = new ContentValues();
		 values.put(DueDateDBContract.DueItems.COLUMN_NAME_ITEM, itemName.getText().toString());
	     values.put(DueDateDBContract.DueItems.COLUMN_NAME_DESC, itemDesc.getText().toString());
	     values.put(DueDateDBContract.DueItems.COLUMN_NAME_DATE, sItemdate);
		 // Which row to update, based on the ID
	    String selection= DueDateDBContract.DueItems._ID +" = ?";
		String selectionArg[]={ItemId};

		 int count = db.update(
		     DueDateDBContract.DueItems.TABLE_NAME,
		     values,
		     selection,
		     selectionArg);
	 }
	 public void deleteItem(View view){
		 DueDateDbHelper mDbHelper =new DueDateDbHelper(view.getContext());
		 SQLiteDatabase db = mDbHelper.getReadableDatabase();
		 String selection= DueDateDBContract.DueItems._ID +" = ?";
		 String selectionArg[]={ItemId};
			// Issue SQL statement.
		db.delete(DueDateDBContract.DueItems.TABLE_NAME, selection, selectionArg);
	 }
}
